#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN 256

void booking();
void avaiableSeats(int tab[2][50]);
void listOfPassangares();
void initializeSeats();
void occupiedArray();
void occupiedSeat(int seat);
int checkingOccupied(int seat);

struct passanger{
    int seat;
    char id[MAX_LEN];
    char name[MAX_LEN];
    char surname[MAX_LEN];
    char nationality[MAX_LEN];
}p;

int tab [2][50];
int arr [100];

FILE *fp;

int main() {
    int choice;

    initializeSeats();
    occupiedArray();

    printf("\t\tWitaj w systemie E-PASAŻER\n");

    while (1){
        system("clear");
        printf("\t\t  ---SYSTEM E-PASAŻER---\n");
        printf("1)Zarezerwuj miejsce\n");
        printf("2)Sprawdź dostępne miejsca\n");
        printf("3)Lista pasażerów\n");
        printf("4)Wyjdź\n");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                booking();
                break;
            case 2:
                avaiableSeats(tab);
                break;
            case 3:
                listOfPassangares();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid number. Press any key 1 tp 4 to continue.\n");
                getchar();
        }


    }

}

void booking() {
    int i;
    int j;

    fp = fopen("passanger.txt", "ab");
    if (fp == NULL) {
        printf("Nie udało sie otworzyć pliku.\n");
    }

    printf("Podaj pesel:\n");
    getchar();
    fgets(p.id, MAX_LEN, stdin);
    p.id[strcspn(p.id, "\n")] = '\0';

    printf("Podaj imię: \n");
    fgets(p.name, MAX_LEN, stdin);
    p.name[strcspn(p.name, "\n")] = '\0';

    printf("Podaj nazwisko: \n");
    fgets(p.surname, MAX_LEN, stdin);
    p.surname[strcspn(p.surname, "\n")] = '\0';

    printf("Podaj narodowość: \n");
    fgets(p.nationality, MAX_LEN, stdin);
    p.nationality[strcspn(p.nationality, "\n")] = '\0';


    while (1){
        printf("Dostępne miejsca: \n");
        avaiableSeats(tab);
        printf("Wybierz miejsce z listy: \n");
        scanf("%d", &p.seat);

        if(checkingOccupied(p.seat)){
            printf("Miejsce jest już zajęte!\n");
        }
        else
        {
           for(i=0;i<2;++i){
               for(j=0; j<50; ++j){
                   if(tab[i][j] == p.seat ){
                       tab[i][j] = -1;
                       occupiedSeat(p.seat);
                       fwrite(&p, sizeof(struct passanger), 1, fp);
                       fclose(fp);
                       printf("Rezerwacja zakończona sukcesem.\n");
                       return;
                   }
               }
           }
        }
    }
}

void avaiableSeats(int tab[2][50]){
    int i=0;
    int j=0;
    for (i=0;i<2;++i){
        for(j=0; j<50; ++j){
            if(tab[i][j] != -1){
                printf("%d ", tab[i][j]);
            }
            else
            {
                printf("X ");
            }
        }
        printf("\n");
    }

}

void listOfPassangares(){
    fp = fopen("passanger.txt", "rb");

    if(fp == NULL){
        printf("Błąd otwarcia pliku\n");
        return;
    }

    printf("\t   %-20s %-20s %-20s %-20s %-10s\n", "PESEL", "Imię", "Nazwisko", "Narodowość", "Miejsce");
        while (fread(&p, sizeof(struct passanger), 1, fp ) == 1){
            printf("\t%-20s   %-20s  %-20s %-20s %-10d\n", p.id, p.name, p.surname, p.nationality, p.seat);
        }
        fclose(fp);

}

void initializeSeats(){
    int i;

    for (i = 0; i < 50; ++i) {
        tab[0][i] = 2 * i;
    }

    for (i = 0; i < 50; ++i) {
        tab[1][i] = (2 * i + 1);
    }
}

void occupiedArray(){
    int i;
    for (i=0; i<100; i++){
        arr[i] = -1;
    }
}

void occupiedSeat(int seat){
    int i;
    for(i=0; i<100; i++) {
        if (arr[i] == -1) {
            arr[i] = seat;
            break;
        }
    }
}
int checkingOccupied(int seat){
    int i;
    for (i=0; i<100; i++){
        if(arr[i] == seat){
            return 1;
        }
    }
    return 0;
}
